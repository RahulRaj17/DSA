import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        int profit[] = {60,100,120};
        int weight[] = {10,20,30};
        int W = 50;
        int n = profit.length;
        int dp[][] = new int[n+1][W+1];
        for(int i=0; i<dp.length; i++){
            Arrays.fill(dp[i], -1);
        }
        System.out.println(knapsack(W, weight, profit, n, dp));
    }

    public static int knapsack(int W, int weight[], int profit[], int n, int dp[][]){
        if(n==0 || W==0) {
            return 0;
        }

        if(dp[n][W] != -1) return dp[n][W];

        if(weight[n-1] <= W){
            return dp[n][W] = Math.max(profit[n-1] + knapsack(W-weight[n-1], weight, profit, n-1, dp), knapsack(W, weight, profit, n-1, dp));
        }else{
            return dp[n][W] = knapsack(W, weight, profit, n-1, dp);
        }
    }
}