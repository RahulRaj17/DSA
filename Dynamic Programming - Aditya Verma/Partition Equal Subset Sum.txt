import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        int set[] = {1,5,11,5};
        int n = 4;
        System.out.println(equalPartition(n, set));
    }

    public static boolean equalPartition(int n, int set[]){
        int sum = 0;
        for(int num : set) sum += num;
        if(sum%2!=0) return false;
        else return isSubsetSum(n, set, sum/2);
    }

    public static boolean isSubsetSum(int n, int set[], int sum){
        boolean dp[][] = new boolean[n+1][sum+1];
        for(int i=0; i<dp[0].length; i++) dp[0][i] = false;
        for(int i=0; i<dp.length; i++) dp[i][0] = true;

        for(int i=1; i<dp.length; i++){
            for(int j=1; j<dp[0].length; j++){
                if(set[i-1] <= j){
                    dp[i][j] = dp[i-1][j - set[i-1]] || dp[i-1][j];
                }else{
                    dp[i][j] = dp[i-1][j];
                }
            }
        }

        return dp[n][sum];
    }
}